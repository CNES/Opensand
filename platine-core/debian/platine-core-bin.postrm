#!/bin/sh
# postrm script for platine-core
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

EXE_GREP="/bin/grep"

remove_user(){
    USER_NAME="platine"
    EXE_DELUSER="/usr/sbin/deluser"

    # Check that user exists
    if [ -n "$(${EXE_GREP} ${USER_NAME} /etc/passwd)" ]
    then
        # Remove user
        ${EXE_DELUSER} --system --quiet ${USER_NAME} || true
    fi
}

remove_conf(){
    EXE_RM="/bin/rm"
    MODCOD_DRA_DIR="/etc/platine/modcod_dra"

    ${EXE_RM} -rf ${MODCOD_DRA_DIR} || true
}

remove_syslog_conf(){
    EXE_RM="/bin/rm"
    SYSLOG_CONF="/etc/rsyslog.d/platine-core.conf"
	LOGROTATE_CONF="/etc/logrotate.d/platine-core.conf"

    ${EXE_RM} -f ${SYSLOG_CONF} || true
    ${EXE_RM} -f ${LOGROTATE_CONF} || true
}


case "$1" in
    purge)
        remove_conf
        remove_syslog_conf
        remove_user
    ;;

    remove)
        remove_syslog_conf
        remove_user
    ;;

    upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
