#!/usr/bin/python
# -*- coding: utf-8 -*-

#
#
# OpenSAND is an emulation testbed aiming to represent in a cost effective way a
# satellite telecommunication system for research and engineering activities.
#
#
# Copyright Â© 2012 TAS
#
#
# This file is part of the OpenSAND testbed.
#
#
# OpenSAND is free software : you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY, without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see http://www.gnu.org/licenses/.
#
#

# Author: Julien BERNARD / <jbernard@toulouse.viveris.com>

import sys
import os
import ConfigParser

CONF = "/etc/opensand/daemon.conf"
SAT_INIT = "/usr/libexec/opensand/sat_netinit"
ST_INIT = "/usr/libexec/opensand/st_netinit"
WS_INIT = "/usr/libexec/opensand/ws_netinit"

if __name__ == "__main__":
    parser = ConfigParser.SafeConfigParser()
    if len(parser.read(CONF)) == 0:
        sys.stderr.write("cannot load configuration")
        sys.exit(1)

    try:
        name = parser.get('service', 'name')
    except ConfigParser.Error, error:
        sys.stderr.write("error reading configuration: " + str(error))
        sys.exit(1)

    ret = 0
    if name == 'sat':
        ret = os.system(SAT_INIT + ' RESET')
    elif name != 'ws':
        ret = os.system(ST_INIT + ' RESET')
    else:
        ret = os.system(WS_INIT + ' RESET')
    #TODO supprimer interface tun

    sys.exit(ret)
        
