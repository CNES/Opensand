#!/bin/bash -e

#
#
# OpenSAND is an emulation testbed aiming to represent in a cost effective way a
# satellite telecommunication system for research and engineering activities.
#
#
# Copyright Â© 2013 TAS
#
#
# This file is part of the OpenSAND testbed.
#
#
# OpenSAND is free software : you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY, without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see http://www.gnu.org/licenses/.
#
#

# Source debconf library.
. /usr/share/debconf/confmodule


DAEMON_CONF="/etc/opensand/daemon.conf"
HOST_INIT="/usr/libexec/opensand/host_init"
TUN_TAP_INIT="/usr/bin/opensand_interfaces"

SERVICE_NAME='sat'
SERVICE_TYPE='_opensand._tcp'
SERVICE_INSTANCE=1
SERVICE_IDENTIFIER=''
SERVICE_INTERFACE='eth0'
SERVICE_PORT=3141
SERVICE_TOOLS=''
SERVICE_MODULES=''
COMMAND_PORT=5926
STATE_PORT=5358
CONFIG_LEVEL='advanced'
DHCP=''
EMU_IFACE='eth0'
EMU_IPV4=''
LAN_IFACE='eth1'
LAN_IPV4=''
LAN_IPV6=''

# read the daemon configuration from debconf cache
read_conf(){
    db_get opensand-daemon/service/name
    RET=`echo $RET | tr 'A-Z' 'a-z'`
    SERVICE_NAME=$RET
    db_get opensand-daemon/service/type
    SERVICE_TYPE=$RET
    db_get opensand-daemon/service/st_instance
    SERVICE_INSTANCE=$RET
    db_get opensand-daemon/service/ws_instance
    SERVICE_IDENTIFIER=$RET
    db_get opensand-daemon/service/interface
    SERVICE_INTERFACE=$RET
    db_get opensand-daemon/service/port
    SERVICE_PORT=$RET
    db_get opensand-daemon/service/tools
    SERVICE_TOOLS=$RET
    db_get opensand-daemon/service/modules
    SERVICE_MODULES=$RET
    db_get opensand-daemon/command/port
    COMMAND_PORT=$RET
    db_get opensand-daemon/state/port
    STATE_PORT=$RET
    db_get opensand-daemon/network/config_level
    RET=`echo $RET | tr 'A-Z' 'a-z'`
    CONFIG_LEVEL=$RET
    db_get opensand-daemon/network/dhcp
    DHCP=$RET
    db_get opensand-daemon/network/emu_iface
    EMU_IFACE=$RET
    db_get opensand-daemon/network/emu_ipv4
    EMU_IPV4=$RET
    db_get opensand-daemon/network/lan_iface
    LAN_IFACE=$RET
    db_get opensand-daemon/network/lan_ipv4
    LAN_IPV4=$RET
    db_get opensand-daemon/network/lan_ipv6
    LAN_IPV6=$RET
}

# write daemon configuration
write_conf(){
    # service section
    echo "[service]" > ${DAEMON_CONF}
    echo "name = ${SERVICE_NAME}" >> ${DAEMON_CONF}
    if [ "${SERVICE_NAME}" = 'st' -o "${SERVICE_NAME}" = 'gw' ]; then
        echo "instance = ${SERVICE_INSTANCE}" >> ${DAEMON_CONF}
    fi
    if [ "${SERVICE_NAME}" = 'ws' ]; then
        echo "instance = ${SERVICE_INSTANCE}_${SERVICE_IDENTIFIER}" >> ${DAEMON_CONF}
    fi
    echo "type = ${SERVICE_TYPE}" >> ${DAEMON_CONF}
    echo "interface = ${SERVICE_INTERFACE}" >> ${DAEMON_CONF}
    echo "port = ${SERVICE_PORT}" >> ${DAEMON_CONF}
    if [ -n "${SERVICE_TOOLS}" ]; then
        echo "tools  = ${SERVICE_TOOLS}" >> ${DAEMON_CONF}
    fi
    if [ -n "${SERVICE_MODULES}" ]; then
        echo "modules  = ${SERVICE_MODULES}" >> ${DAEMON_CONF}
    fi
    echo "" >> ${DAEMON_CONF}
    # command section
    echo "[command]" >> ${DAEMON_CONF}
    echo "port = ${COMMAND_PORT}" >> ${DAEMON_CONF}
    echo "" >> ${DAEMON_CONF}
    echo "[state]" >> ${DAEMON_CONF}
    echo "port = ${STATE_PORT}" >> ${DAEMON_CONF}
    echo "" >> ${DAEMON_CONF}
    # network section
    echo "[network]" >> ${DAEMON_CONF}
    echo "config_level" = ${CONFIG_LEVEL} >> ${DAEMON_CONF}
    if [ "${SERVICE_NAME}" = "ws" ]; then
        echo "dhcp" = ${CONFIG_LEVEL} >> ${DAEMON_CONF}
    fi
    if [ "${CONFIG_LEVEL}" = "advanced" ]; then
        if [ "${SERVICE_NAME}" != "ws" ]; then
            echo "emu_iface = ${EMU_IFACE}" >> ${DAEMON_CONF}
            echo "emu_ipv4 = ${EMU_IPV4}" >> ${DAEMON_CONF}
        fi
        if [ ${SERVICE_NAME} != 'sat' ] &&
           [ "${SERVICE_NAME}" != "ws" -o "${DHCP}" != "true" ]; then
            echo "lan_iface = ${LAN_IFACE}" >> ${DAEMON_CONF}
            echo "lan_ipv4 = ${LAN_IPV4}" >> ${DAEMON_CONF}
            echo "lan_ipv6 = ${LAN_IPV6}" >> ${DAEMON_CONF}
        fi
    # for automatic mode the interfaces addresses will be handled by the daemon
    else
    	if [ "${SERVICE_NAME}" != "ws" ]; then
    		echo "emu_iface = ${EMU_IFACE}" >> ${DAEMON_CONF}
    	fi
    	if [ ${SERVICE_NAME} != 'sat' ]; then
    		echo "lan_iface = ${LAN_IFACE}" >> ${DAEMON_CONF}
    	fi
    fi
}

# initialize OpenSAND network
initialize(){
    if [ "${SERVICE_NAME}" = 'st' -o "${SERVICE_NAME}" = 'gw' ]; then
        # create the OpenSAND tun/tap interface if it does not exist
        is_iface=`ip link show | grep opensand_tun`
        if [ "${is_iface}" == "" ]; then
            ${TUN_TAP_INIT} > /dev/null
            if [ $? -ne 0 ] ; then
                echo "Error when creating the tun interface" >&2
                exit 1
            fi
        fi
    else
    	# remove interfaces in case it it was another type of host
        ${TUN_TAP_INIT} -d 1>/dev/null 2>&1
    fi
    # configure host
    ${HOST_INIT} > /dev/null

    if [ $? -ne 0 ] ; then
        echo "Error when configurating the OpenSAND daemon" >&2
        exit 1
    fi
}

# TODO currently debconf force printing to stderr => comment this debug messages
#echo "Configure OpenSAND Daemon:"
#/bin/echo -e "\tGet user configuration"
read_conf
#/bin/echo -e "\tWrite configuration file"
write_conf
#/bin/echo -e "\tInitialize OpenSAND Network"
initialize


db_stop
exit 0
