#!/bin/bash

THIS_SCRIPT=$(basename $0)
CMD=$1

#
# This script is used to initialize the Platine network for satellite
#
# Authors Julien Bernard <julien.bernard@toulouse.viveris.com>

# Source debconf library.
. /usr/share/debconf/confmodule

# Source default library
SYSCTL="true"

# UDP buffer size: incresed to support high traffic
WMEM_MAX="1048580"
RMEM_MAX="1048580"
WMEM_DEFAULT="1048580"
RMEM_DEFAULT="1048580"
if [ -f /etc/default/platine-network ]; then
    . /etc/default/platine-network
fi

# load the configuration file
load_conf(){
    # load debconf parameters
    db_get platine-daemon/network/config_level
    config=$RET
    if [ "$config" != "AUTOMATIC" ]; then
        db_get platine-daemon/network/emu_iface
        export EMU_IFACE=$RET
        db_get platine-daemon/network/emu_ipv4
        export EMU_IPV4=$RET
        db_get platine-daemon/network/emu_ipv6
        export EMU_IPV6=$RET
    else
        export EMU_IPV4=`ip addr show ${EMU_IFACE} | grep -o -e "inet [^ ]*" | \grep -o -e "[^ ]*$"`
        export EMU_IPV6=`ip addr show ${EMU_IFACE} | grep global | grep -o -e "inet6 [^ ]*" | grep -o -e "[^ ]*$"`
        if [ -z "$EMU_IPV4" ]; then
            halt_on_error "cannot retrive ${EMU_IFACE} IPv4 address, please select ADVANCED mode or assign an address"
        fi
        if [ -z "$EMU_IPV6" ]; then
            halt_on_error "cannot retrive ${EMU_IFACE} IPv6 address, please select ADVANCED mode or assign an address"
        fi
        # complete the configuration file (the last section shall be [network])
        echo "emu_iface = ${EMU_IFACE}" >> ${DAEMON_CONF}
        echo "emu_ipv4 = ${EMU_IPV4}" >> ${DAEMON_CONF}
        echo "emu_ipv6 = ${EMU_IPV6}" >> ${DAEMON_CONF}
    fi
}


# Print a short help message
#
usage(){
    echo "This script is used to set up static network configuration for platine platform"
    echo "Usage: $THIS_SCRIPT <command>"
    echo "    where <command> is one among"
    echo "        CONF    configure the satellite network"
    echo "        CHECK   show the network configuration"
    echo "        RESET   blank the network configuration"
    echo
    return 
}

halt_on_error(){
    echo "Error: $*"  >&2
    echo "" >&2
    db_stop
    exit 1
}

# Print the command to be run, then run it.
# Exit if status !=0
#
evecho(){
    echo $*
    eval $*
    my_status=$?
    [ $my_status -ne 0 ] && halt_on_error "error on last command"

    return
}

# Check if the user running this script is root. 
# Exit if not
#
check_root(){
    id | grep -q '^uid=0(root)'
    retstat=$?
    [ $retstat -ne 0 ] && halt_on_error "you _must_ be root before executing $THIS_SCRIPT"
    return
}

# Print the network configuration
check_conf(){
    /sbin/ifconfig -a
    /sbin/ip route
    /sbin/ip -6 route
    return
}

# Set sysctl parameters for the sat
set_sysctl(){
    # increase UDP buffers
    echo "Set wmem_max=$WMEM_MAX"
    evecho /sbin/sysctl -w "net/core/wmem_max"=$WMEM_MAX
    echo "Set rmem_max=$RMEM_MAX"
    evecho /sbin/sysctl -w "net/core/rmem_max"=$RMEM_MAX
    echo "Set wmem_default=$WMEM_DEFAULT"
    evecho /sbin/sysctl -w "net/core/wmem_default"=$WMEM_DEFAULT
    echo "Set rmem_default=$RMEM_DEFAULT"
    evecho /sbin/sysctl -w "net/core/rmem_default"=$RMEM_DEFAULT
    return
}

# Configure the Satellite Emulator
#
sat_config(){
    echo "# Configuring SAT"

    if [ ${SYSCTL} = "true" ]; then
        echo "# Configuring sysctl"
        echo "  See /etc/default/platine-daemon to avoid this modifications" 
        set_sysctl
    fi

    echo "# Configuring interfaces"
    evecho ifconfig $EMU_IFACE up

    return
}

check_root

echo "# Configure Platine network for satellite"
case  $CMD in
     CONF )
        load_conf
        sat_config
     ;;
     CHECK )
         check_conf
     ;; 
     RESET )
     ;;
     *) 
        echo "Error: unknown command $CMD"
        usage
        db_stop
        exit 1
    ;;
esac
 
db_stop
exit 0
