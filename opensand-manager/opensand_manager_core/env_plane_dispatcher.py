# -*- coding: utf-8 -*-

"""
env_plane_dispatcher.py - Dispatch events generated by the environment plane
model
"""

from opensand_manager_gui.view.event_tab import EventTab

class EnvPlaneDispatcher(object):
    def __init__(self, controller, view):
        self._event_notebook = None
        self._controller = controller
        self._event_tabs = {}
    
        controller.set_observer(self)
    
        if view:
            self._event_notebook = view.get_event_notebook()
    
    def program_list_changed(self):
        if not self._event_notebook:
            return
    
        for program in self._controller.get_programs():
            if program.ident not in self._event_tabs:
                self._event_tabs[program.ident] = EventTab(self._event_notebook,
                    program.name)
    
    def new_probe_value(self, probe, time, value):
        return
    
    def new_event(self, program, name, level, message):
        if not self._event_notebook:
            return
        
        self._event_tabs[program.ident].message(level, name, message)