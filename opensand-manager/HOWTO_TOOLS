For a tool with name NAME and with a supported host HOST you need a package
for manager with:
    - the /usr/share/opensand/tools/NAME folder
    - the /usr/share/opensand/tools/NAME/HOST folder for each supported host
      (with HOST in sat, gw, st)
    - the /usr/share/opensand/tools/NAME/description file containing a tool
      description with attributes as specified in
      'www.gtk.org/api/2.6/pango/PangoMarkupFormat.html'
    - the /usr/share/opensand/tools/NAME/HOST/config file containing the tool
      configuration for a specific host. This file must be in the OpenSAND XML
      format. See opensand-conf module for more details.
    - the /usr/share/opensand/tools/NAME/HOST/binary file containing the command
      line to start the tool (options are allowed)
    - the /usr/share/opensand/manager/images/tools/NAME.png image (20x20)
      for the tool representation (optionnal)
    - the tool binary (for deploy mode only).
    - optional configuration files in /usr/share/opensand/tools/NAME/HOST/, with
      extension in .xml, .conf, .ini

and a package for the daemons with:
    - the tool name in the tools section of daemon configuration
      (you can use the script below to add it)
    - the tool binary.

The tools configurations are deployed in /etc/opensand/tools/NAME.conf

For advanced users (developpers) you also need to update
$HOME/.opensand/deploy.ini to deploy your tool.
TODO: mettre une structure de r√©pertoire debian

********************************************************************************
* A little script to enable/disable tool on daemon                             *
********************************************************************************

#!/usr/bin/env python2
# -*- coding: utf-8 -*-

import os
import sys
import ConfigParser
import debconf

HOST = [<complete with the different hosts names separated by ','>]
TOOL_NAME = <complete with NAME>
CONF_FILENAME = '/etc/opensand/daemon.conf'

if __name__ == "__main__":
    if len(sys.argv) < 2 or sys.argv[1] not in ("add", "remove"):
        print "USAGE: %s add/remove" % sys.argv[0]
        sys.exit(1)

    parser = ConfigParser.SafeConfigParser()

    if len(parser.read(CONF_FILENAME)) == 0:
        # if the daemon is not installed (eg. if there is only the manager on the host)
        print 'ERROR: cannot read configuration file ' + CONF_FILENAME
        sys.exit(1)

    try:
        host_name = parser.get('service', 'name')
        if host_name not in HOST:
            print "ERROR: this host does not support the tool"
            sys.exit(1)
    except ConfigParser.Error, msg:
        print 'ERROR: cannot get host name in configuration file (%s)' % msg


    tools = ''
    try:
        tools = parser.get('service', 'tools')
    except ConfigParser.Error, msg:
        pass

    try:
        os.environ['DEBIAN_HAS_FRONTEND']
        db = debconf.Debconf()
        db_tools = db.get("opensand-daemon/service/tools")
    except debconf.DebconfError, (val, err):
        print str("Debconf error: " + err)
        sys.exit(1)
    except:
        os.execv(debconf._frontEndProgram, [debconf._frontEndProgram] + sys.argv)

    if sys.argv[1] == "add":
        if tools.find(TOOL_NAME) != -1:
            print "Tool already supported by daemon"
            sys.exit(1)
        try:
            tools = tools + " " + TOOL_NAME
            parser.set('service', 'tools', tools)
        except ConfigParser.Error, msg:
            print 'ERROR: cannot set tools in configuration file (%s)' % msg
            sys.exit(1)

        if db_tools.find(TOOL_NAME) == -1:
            db_tools = db_tools + " " + TOOL_NAME
    else:
        try:
            tools = tools.replace(TOOL_NAME, "")
            if tools.isspace() or tools == '':
                parser.remove_option('service', 'tools')
            else:
                parser.set('service', 'tools', tools)
        except ConfigParser.Error, msg:
            print 'ERROR: cannot set tools in configuration file (%s)' % msg
            sys.exit(1)

        if db_tools.find(TOOL_NAME) != -1:
            db_tools = db_tools.replace(TOOL_NAME, "")

    # modify debconf database
    try:
        db.set("opensand-daemon/service/tools", db_tools)
    except debconf.DebconfError, (val, err):
        print str("Debconf error: " + err)
        sys.exit(1)

    # write the configuration file
    with open(CONF_FILENAME, 'wb') as config_file:
        parser.write(config_file)

    sys.exit(0)


********************************************************************************
* The deploy.ini file format                                                   *
********************************************************************************

[NAME]
files: list of files to deploy on the host
binary: path of the binary to run on the host
ld_library_path: LD_LIBRARY_PATH used on host

BEWARE: prefixes (under [prefix] section) are added to pathname.
